{
  "displayName": "Arm A-profile A32/T32 Instruction Set",
  "feature": "AArch32",
  "docUrl": "https://developer.arm.com/documentation/dui0473/m/arm-and-thumb-instructions",
  "architectures": {
    "5": "ARMv5T*, ARMv6*, ARMv7",
    "5E": "ARMv5TE ARMv6*, ARMv7",
    "6": "ARMv6*, ARMv7",
    "6M": "ARMv6-M ARMv7",
    "x6M": "Not available in ARMv6-M",
    "7": "ARMv7",
    "7A": "ARMv7-A",
    "7M": "ARMv7-M",
    "x7M": "Not available in ARMv6-M or ARMv7-M or any ARMv7E-M implementation",
    "7EM": "ARMv7E-M but not in the ARMv7-M or ARMv6-M architecture",
    "7R": "ARMv7-R",
    "7MP": "ARMv7 with Multiprocessing Extensions",
    "J": "ARMv5TEJ, ARMv6*, and ARMv7",
    "K": "ARMv6K ARMv7",
    "T": "ARMv4T, ARMv5T*, ARMv6*, ARMv7",
    "T2": "ARMv6T2 and above",
    "XS": "XScale versions of the ARM",
    "Z": "If Security Extensions are implemented"
  },
  "rotations": [
    "ROR #8",
    "ROR #16",
    "ROR #24"
  ],
  "operands": {
    "R": "Register",
    "O": "Any operand",
    "C": "Rotation",
    "N": "Number",
    "L": "Label",
    "*": "Any sequence of operands",
    "<empty>": "No operands"
  },
  "instructions": {
    "ADC": {
      "desc": "Add with Carry",
      "operands": "RRO",
      "suffix": "S"
    },
    "ADD": {
      "desc": "Add",
      "operands": "RRO",
      "suffix": "S"
    },
    "ADR": {
      "desc": "Load program or register-relative address (short range)",
      "operands": "RL",
      "specifier": "W",
      "docName": "adr--pc-relative-"
    },
    "ADRL": {
      "desc": "Load program or register-relative address (medium range)",
      "arch": "x6M",
      "operands": "RL",
      "docName": "adrl-pseudo-instruction"
    },
    "AND": {
      "desc": "Logical AND",
      "operands": "RRO",
      "suffix": "S"
    },
    "ASR": {
      "desc": "Arithmetic Shift Right",
      "operands": "RRO",
      "suffix": "S"
    },
    "B": {
      "desc": "Branch",
      "operands": "L",
      "specifier": "W"
    },
    "BFC": {
      "desc": "Bit Field Clear",
      "arch": "T2",
      "operands": "RNN"
    },
    "BFI": {
      "desc": "Bit Field Insert",
      "arch": "T2",
      "operands": "RRNN"
    },
    "BIC": {
      "desc": "Bit Clear",
      "operands": "RRO",
      "suffix": "S"
    },
    "BKPT": {
      "desc": "Breakpoint",
      "arch": "5",
      "operands": "I"
    },
    "BL": {
      "desc": "Branch with Link",
      "operands": "L",
      "specifier": "W"
    },
    "BLX": {
      "desc": "Branch with LinK change instruction set",
      "arch": "T",
      "operands": "L R",
      "specifier": "W"
    },
    "BX": {
      "desc": "Branch, change instruction set",
      "arch": "T",
      "operands": "R"
    },
    "BXJ": {
      "desc": "Branch, change to Jazelle",
      "arch": "J, x7M",
      "operands": "R"
    },
    "CBZ": {
      "desc": "Compare and Branch if Zero",
      "arch": "T2",
      "operands": "L",
      "docName": "cbz-and-cbnz"
    },
    "CBNZ": {
      "desc": "Compare and Branch if Non Zero",
      "arch": "T2",
      "operands": "L",
      "docName": "cbz-and-cbnz"
    },
    "CDP": {
      "desc": "Coprocessor Data Processing operation",
      "arch": "x6M",
      "operands": "*",
      "docName": "cdp-and-cdp2"
    },
    "CDP2": {
      "desc": "Coprocessor Data Processing operation",
      "arch": "5 x6M",
      "operands": "*",
      "docName": "cdp-and-cdp2"
    },
    "CLREX": {
      "desc": "Clear Exclusive",
      "arch": "K x6M",
      "operands": ""
    },
    "CLZ": {
      "desc": "Count Leading Zeros",
      "arch": "5 x6M",
      "operands": "RR"
    },
    "CMN": {
      "desc": "Compare Negative",
      "operands": "RO",
      "docName": "cmp-and-cmn"
    },
    "CMP": {
      "desc": "Compare",
      "operands": "RO",
      "docName": "cmp-and-cmn"
    },
    "CPS": {
      "desc": "Change Processor State",
      "arch": "6",
      "operands": "*",
      "suffix": "IE ID"
    },
    "CPY": {
      "desc": "Copy (pseudo instruction)",
      "arch": "6",
      "operands": "RR",
      "docName": "cpy-pseudo-instruction"
    },
    "DBG": {
      "desc": "Debug",
      "arch": "7",
      "operands": "N"
    },
    "DMB": {
      "desc": "Data Memory Barrier",
      "arch": "6M 7",
      "operands": "E",
      "E": "SY ST ISH ISHST NSH NSHST OSH OSHST"
    },
    "DSB": {
      "desc": "Data Synchronization Barrier",
      "arch": "6M 7",
      "operands": "E",
      "E": "SY ST ISH ISHST NSH NSHST OSH OSHST"
    },
    "EOR": {
      "desc": "Exclusive OR",
      "operands": "RRO",
      "suffix": "S"
    },
    "ERET": {
      "desc": "Exception Return",
      "arch": "7VE"
    },
    "HVC": {
      "desc": "Hypervisor Call",
      "arch": "7VE",
      "operands": "O"
    },
    "ISB": {
      "desc": "Instruction Synchronization Barrier",
      "arch": "6M 7",
      "operands": "E",
      "E": "SY"
    },
    "IT": {
      "desc": "If-Then",
      "arch": "T2"
    },
    "LDC": {
      "desc": "Load Coprocessor",
      "arch": "x6M",
      "operands": "*",
      "suffix": "L",
      "docName": "ldc-and-ldc2"
    },
    "LDC2": {
      "desc": "Load Coprocessor",
      "arch": "5 x6M",
      "operands": "*",
      "suffix": "L",
      "docName": "ldc-and-ldc2"
    },
    "LDM": {
      "desc": "Load Multiple registers",
      "operands": "R*",
      "suffix": "IA IB DA DB"
    },
    "LDR": {
      "desc": "Load Register with byte/signed byte/halfword/signed halfword",
      "operands": "R*",
      "suffix": "B SB H SH",
      "docName": "ldr--immediate-offset-"
    },
    "LDRD": {
      "desc": "Load Register with two words",
      "arch": "5E x6M",
      "operands": "R*",
      "docName": "ldr--immediate-offset-"
    },
    "LDREX": {
      "desc": "Load Register Exclusive",
      "arch": "6 x6M",
      "operands": "R*",
      "suffix": "B H D"
    },
    "LDRBT": {
      "desc": "Load Register with bytE user mode",
      "arch": "x6M",
      "operands": "R*",
      "docName": "ldr--unprivileged"
    },
    "LDRHT": {
      "desc": "Load Register with halfword, user mode",
      "arch": "T2",
      "operands": "R*",
      "docName": "ldr--unprivileged"
    },
    "LDRSBT": {
      "desc": "Load Register with signed bytE user mode",
      "arch": "T2",
      "operands": "R*",
      "docName": "ldr--unprivileged"
    },
    "LDRSHT": {
      "desc": "Load Register with halfword, user mode",
      "arch": "T2",
      "operands": "R*",
      "docName": "ldr--unprivileged"
    },
    "LDRT": {
      "desc": "Load Register with word, user mode",
      "arch": "x6M",
      "operands": "R*",
      "docName": "ldr--unprivileged"
    },
    "LSL": {
      "desc": "Logical Shift Left",
      "operands": "RRR RRN",
      "suffix": "S"
    },
    "LSR": {
      "desc": "Logical Shift Right",
      "operands": "RRR RRN",
      "suffix": "S"
    },
    "MAR": {
      "desc": "Move from Registers to 40-bit Accumulator",
      "arch": "XS",
      "operands": "*"
    },
    "MCR": {
      "desc": "Move from Register to Coprocessor",
      "arch": "x6M",
      "operands": "*",
      "docName": "mcr-and-mcr2"
    },
    "MCR2": {
      "desc": "Move from Register to Coprocessor",
      "arch": "5 x6M",
      "operands": "",
      "type": "2 R",
      "docName": "mcr-and-mcr2"
    },
    "MCRR": {
      "desc": "Move from Register to Coprocessor",
      "arch": "5E x6M",
      "operands": "*",
      "docName": "mcrr-and-mcrr2"
    },
    "MCRR2": {
      "desc": "Move from Register to Coprocessor",
      "arch": "6 x6M",
      "operands": "*",
      "docName": "mcrr-and-mcrr2"
    },
    "MIA": {
      "desc": "Multiply with Internal 40-bit Accumulate",
      "arch": "XS",
      "operands": "*",
      "suffix": "PH BB BT TB TT",
      "docName": "mia--miaph--and-miaxy"
    },
    "MLA": {
      "desc": "Multiply Accumulate",
      "arch": "x6M",
      "operands": "RRRR",
      "suffix": "S"
    },
    "MLS": {
      "desc": "Multiply and Subtract",
      "arch": "T2",
      "operands": "RRRR"
    },
    "MOV": {
      "desc": "Move",
      "operands": "RO RN",
      "suffix": "S"
    },
    "MOVT": {
      "desc": "Move Top",
      "arch": "T2",
      "operands": "RN"
    },
    "MOV32": {
      "desc": "Move 32-bit immediate to register (pseudo instruction)",
      "arch": "T2",
      "operands": "R*",
      "docName": "mov32-pseudo-instruction"
    },
    "MRA": {
      "desc": "Move from 40-bit Accumulator to Registers",
      "arch": "XS",
      "operands": "RR*"
    },
    "MRC": {
      "desc": "Move from Coprocessor to Register",
      "arch": "x6M",
      "operands": "*",
      "docName": "mrc-and-mrc2"
    },
    "MRC2": {
      "desc": "Move from Coprocessor to Register",
      "arch": "5 x6M",
      "operands": "*",
      "docName": "mrc-and-mrc2"
    },
    "MRRC": {
      "desc": "Move from Coprocessor to Register",
      "arch": "5E x6M",
      "operands": "*",
      "docName": "mrrc-and-mrrc2"
    },
    "MRRC2": {
      "desc": "Move from Coprocessor to Register",
      "arch": "6 x6M",
      "operands": "*",
      "docName": "mrrc-and-mrrc2"
    },
    "MRS": {
      "desc": "Move from PSR to register",
      "operands": "*",
      "docName": "mrs--psr-to-general-purpose-register-"
    },
    "MSR": {
      "desc": "Move from register to PSR",
      "operands": "*",
      "docName": "msr--arm-register-to-system-coprocessor-register-"
    },
    "MUL": {
      "desc": "Multiply",
      "operands": "RR RRR",
      "suffix": "S"
    },
    "MVN": {
      "desc": "Move NOT",
      "operands": "RO",
      "suffix": "S"
    },
    "NEG": {
      "desc": "Negate (pseudo instruction)",
      "operands": "RR",
      "docName": "neg-pseudo-instruction"
    },
    "NOP": {
      "desc": "No Operation",
      "operands": ""
    },
    "ORN": {
      "desc": "Logical OR NOT (Thumb only)",
      "arch": "T2",
      "operands": "RR RRO",
      "suffix": "S",
      "docName": "orn--thumb-only-"
    },
    "ORR": {
      "desc": "Logical OR",
      "operands": "RR RRO",
      "suffix": "S"
    },
    "PKH": {
      "desc": "Halfword Packing instructions that combine a halfword from one register with a halfword from another register. One of the operands can be shifted before extraction of the halfword",
      "arch": "6 7EM",
      "operands": "RR* RRR*",
      "type": "BT TB",
      "docName": "pkhbt-and-pkhtb"
    },
    "PLD": {
      "desc": "Preload Data",
      "arch": "5E x6M",
      "operands": "*",
      "docName": "pld--pldw--and-pli"
    },
    "PLDW": {
      "desc": "Preload Data with intent to Write",
      "arch": "7MP",
      "operands": "*",
      "docName": "pld--pldw--and-pli"
    },
    "PLI": {
      "desc": "Preload Instruction",
      "arch": "7",
      "operands": "*",
      "docName": "pld--pldw--and-pli"
    },
    "POP": {
      "desc": "POP registers from stack",
      "operands": "*"
    },
    "PUSH": {
      "desc": "PUSH registers to stack",
      "operands": "*"
    },
    "QADD": {
      "desc": "Signed saturating Add",
      "arch": "5E 7EM",
      "operands": "RR RRR"
    },
    "QADD8": {
      "desc": "Signed saturating parallel byte-wise addition",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "QADD16": {
      "desc": "Signed saturating parallel halfword-wise addition",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "QASX": {
      "desc": "Signed saturating parallel add and subtract halfwords with exchange",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "QDADD": {
      "desc": "Signed saturating Double and Add",
      "arch": "5E 7EM",
      "operands": "RR RRR"
    },
    "QDSUB": {
      "desc": "Signed saturating Double and Subtract",
      "arch": "5E 7EM",
      "operands": "RR RRR"
    },
    "QSAX": {
      "desc": "Signed saturating parallel subtract and add halfwords with exchange",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "QSUB": {
      "desc": "Signed saturating Subtract",
      "arch": "5E 7EM",
      "operands": "RR RRR",
      "docName": ""
    },
    "QSUB8": {
      "desc": "Signed saturating parallel byte-wise subtraction",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "QSUB16": {
      "desc": "Signed saturating parallel halfword-wise subtraction",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "RBIT": {
      "desc": "Reverse Bits",
      "arch": "T2",
      "operands": "RR"
    },
    "REV": {
      "desc": "Reverse byte order in a word",
      "arch": "6",
      "operands": "RR"
    },
    "REV16": {
      "desc": "Reverse byte order in two halfwords",
      "arch": "6",
      "operands": "RR"
    },
    "REVSH": {
      "desc": "Reverse byte order in a halfword and sign extend",
      "arch": "6",
      "operands": "RR"
    },
    "RFE": {
      "desc": "Return From Exception",
      "arch": "T2 x7M",
      "operands": "R",
      "type": "IA IB DA DB"
    },
    "ROR": {
      "desc": "Rotate Right Register",
      "operands": "RRR RRN",
      "suffix": "S"
    },
    "RRX": {
      "desc": "Rotate Right with Extend",
      "arch": "x6M",
      "operands": "RR",
      "suffix": "S"
    },
    "RSB": {
      "desc": "Reverse Subtract without carry",
      "operands": "RO RRO",
      "suffix": "S"
    },
    "RSC": {
      "desc": "Reverse Subtract with Carry",
      "arch": "x7M",
      "operands": "RO RRO",
      "suffix": "S"
    },
    "SADD8": {
      "desc": "Signed parallel byte-wise addition",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "SADD16": {
      "desc": "Signed parallel halfword-wise addition",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "SASX": {
      "desc": "Signed parallel add and subtract halfwords with exchange",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "SBC": {
      "desc": "Subtract with Carry",
      "arch": "",
      "operands": "RO RRO",
      "suffix": "S"
    },
    "SBFX": {
      "desc": "Signed Bit Field eXtract",
      "arch": "T2",
      "operands": "RRNN"
    },
    "SDIV": {
      "desc": "Signed divide",
      "arch": "7A, 7M 7R",
      "operands": "RR RRR"
    },
    "SEL": {
      "desc": "Select bytes according to APSR GE flags",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "SETEND": {
      "desc": "Set Endianness for memory accesses",
      "arch": "6 x7M",
      "operands": "E",
      "E": "BE LE"
    },
    "SEV": {
      "desc": "Set Event",
      "arch": "K 6M",
      "operands": ""
    },
    "SHADD8": {
      "desc": "Signed halving parallel byte-wise addition",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "SHADD16": {
      "desc": "Signed halving parallel halfword-wise addition",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "SHASX": {
      "desc": "Signed halving parallel subtract and add halfwords with exchange",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "SHSAX": {
      "desc": "Signed halving parallel halfword-wise addition",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "SHSUB8": {
      "desc": "Signed halving parallel byte-wise subtraction",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "SHSUB16": {
      "desc": "Signed halving parallel byte-wise subtraction",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "SMC": {
      "desc": "Secure Monitor Call",
      "arch": "Z",
      "operands": "N"
    },
    "SMLAD": {
      "desc": "Dual 16-bit Signed Multiply with Addition of products and 32-bit accumulation",
      "arch": "6 7EM",
      "operands": "RRRR",
      "suffix": "X"
    },
    "SMLA": {
      "desc": "Signed Multiply with Accumulate (32 <= 16 x 16 + 32)",
      "arch": "5E 7EM",
      "operands": "RRRR",
      "type": "BB BT TB TT",
      "docName": "smlaxy"
    },
    "SMLALD": {
      "desc": "Dual 16-bit Signed Multiply with Addition of products and 64-bit Accumulation",
      "arch": "6 7EM",
      "operands": "RRRR",
      "suffix": "X"
    },
    "SMLAL": {
      "desc": "Signed Long Multiply, with optional AccumulatE with 32-bit operands, and 64-bit result and accumulator.",
      "operands": "RRRR",
      "suffix": "S",
      "docName": "smlal"
    },
    "SMLALBB": {
      "desc": "Signed Multiply Accumulate (64 <= 64 + 16 x 16). B means use the bottom half (bits [15:0])",
      "arch": "5E 7EM",
      "operands": "RRRR",
      "docName": "smlalxy"
    },
    "SMLALBT": {
      "desc": "Signed Multiply Accumulate (64 <= 64 + 16 x 16). B means use the bottom half (bits [15:0]), T means use the top half (bits [31:16]) ",
      "arch": "5E 7EM",
      "operands": "RRRR",
      "docName": "smlalxy"
    },
    "SMLALTB": {
      "desc": "Signed Multiply Accumulate (64 <= 64 + 16 x 16). B means use the bottom half (bits [15:0]), T means use the top half (bits [31:16])  ",
      "arch": "5E 7EM",
      "operands": "RRRR",
      "docName": "smlalxy"
    },
    "SMLALTT": {
      "desc": "Signed Multiply Accumulate (64 <= 64 + 16 x 16). T means use the top half (bits [31:16]) ",
      "arch": "5E 7EM",
      "operands": "RRRR",
      "docName": "smlalxy"
    },
    "SMLAW": {
      "desc": "Signed Multiply-Accumulate WidE with one 32-bit operand and one 16-bit operand, and a 32-bit accumulate valuE providing the top 32 bits of the result (T = top half, B = bottom half)",
      "arch": "5E 7EM",
      "operands": "RRRR",
      "type": "B T",
      "docName": "smlawy"
    },
    "SMLSD": {
      "desc": "Dual Signed Multiply Subtract Accumulate",
      "arch": "6 7EM",
      "operands": "RRRR",
      "suffix": "X"
    },
    "SMLSLD": {
      "desc": "Dual Signed Multiply Subtract Accumulate Long",
      "arch": "6 7EM",
      "operands": "RRRR",
      "suffix": "X"
    },
    "SMMLA": {
      "desc": "Signed top word Multiply with Accumulate (32 <= TopWord(32 x 32 + 32)), R = rounded",
      "arch": "6 7EM",
      "operands": "RRRR",
      "suffix": "R"
    },
    "SMMLS": {
      "desc": "Signed top word Multiply with Subtract (32 <= TopWord(32 - 32 x 32)), R = rounded",
      "arch": "6 7EM",
      "operands": "RRRR",
      "suffix": "R"
    },
    "SMMUL": {
      "desc": "Signed top word Multiply (32 <= TopWord(32 x 32)), R = rounded",
      "arch": "6 7EM",
      "operands": "RR RRR",
      "suffix": "R"
    },
    "SMUAD": {
      "desc": "Dual 16-bit Signed Multiply with Addition of products, and optional exchange of operand halves",
      "arch": "6 7EM",
      "operands": "RR RRR",
      "suffix": "X"
    },
    "SMUL": {
      "desc": "Signed Multiply (32 <= 32 x 16 top, top)",
      "arch": "5E 7EM",
      "type": "BB BT TB TT",
      "operands": "RR RRR",
      "docName": "smulxy"
    },
    "SMULL": {
      "desc": "Signed Multiply (64 <= 32 x 32)",
      "arch": "x6M",
      "operands": "RRRR",
      "suffix": "S"
    },
    "SMULW": {
      "desc": "Signed Multiply (32 <= 32 x 16 top)",
      "arch": "5E 7EM",
      "operands": "RR RRR",
      "type": "B T",
      "docName": "smulwy"
    },
    "SMUSD": {
      "desc": "Dual 16-bit Signed Multiply with Subtraction of products, and optional exchange of operand halves",
      "arch": "6 7EM",
      "operands": "RR RRR",
      "suffix": "X"
    },
   "SRS": {
      "desc": "Store Return State",
      "arch": "T2 x7M",
      "operands": "*",
      "suffix":"IA IB DA DB"
    },
    "SSAT": {
      "desc": "Signed Saturate",
      "arch": "6 x6M",
      "operands": "RNR RNRS"
    },
    "SSAT16": {
      "desc": "Signed SaturatE parallel halfwords",
      "arch": "6 7EM",
      "operands": "RNR"
    },
    "SSAX": {
      "desc": "Signed parallel subtract and add halfwords with exchange",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "SSUB8": {
      "desc": "Signed parallel byte-wise subtraction",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "SSUB16": {
      "desc": "Signed parallel halfword-wise subtraction",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "STC": {
      "desc": "Store Coprocessor",
      "arch": "x6M",
      "operands": "*",
      "suffix": "L",
      "docName": "stc-and-stc2"
    },
    "STC2": {
      "desc": "Store Coprocessor",
      "arch": "5 x6M",
      "operands": "*",
      "suffix": "L",
      "docName": "stc-and-stc2"
    },
    "STM": {
      "desc": "Store Multiple registers",
      "operands": "R*",
      "suffix": "IA IB DA DB"
    },
    "STR": {
      "desc": "Store Register with word",
      "operands": "R*",
      "docName": "str--immediate-offset-"
    },
    "STRB": {
      "desc": "Store Register with byte",
      "operands": "R*",
      "docName": "str--immediate-offset-"
    },
    "STRBT": {
      "desc": "Store Register with bytE user mode",
      "arch": "x6M",
      "operands": "R*",
      "docName": "str--immediate-offset-"
    },
    "STRD": {
      "desc": "Store Registers with two words",
      "arch": "5E x6M",
      "operands": "RR*",
      "docName": "str--immediate-offset-"
    },
    "STREX": {
      "desc": "Store Register Exclusive",
      "arch": "6 x6M",
      "operands": "RR RRR RRRR RRRN"
    },
    "STREXB": {
      "desc": "Store Register Exclusive Byte",
      "arch": "K x6M",
      "operands": "RR RRR"
    },
    "STREXH": {
      "desc": "Store Register Exclusive Halfword",
      "arch": "K x6M",
      "operands": "RR RRR"
    },
    "STREXD": {
      "desc": "Store Register Exclusive Doubleword",
      "arch": "K x7M",
      "operands": "RRR RRRR"
    },
    "STRH": {
      "desc": "Store Register with halfword",
      "operands": "",
      "docName": "str--immediate-offset-"
    },
    "strht": {
      "desc": "Store Register with halfword, user mode",
      "arch": "T2",
      "operands": "",
      "docName": "str--immediate-offset-"
    },
    "strt": {
      "desc": "Store Register with halfword, user mode",
      "arch": "x6M",
      "operands": "",
      "docName": "str--immediate-offset-"
    },
    "SUB": {
      "desc": "Subtract",
      "operands": "RO RRO RN RRN",
      "suffix": "S"
    },
    "SUBS": {
      "desc": "Exception return, no stack",
      "arch": "T2 x7M"
    },
    "SVC": {
      "desc": "SuperVisor Call",
      "operands": "N"
    },
    "SWP": {
      "desc": "Swap registers and memory",
      "operands": "RR RRR"
    },
    "SWPB": {
      "desc": "Swap registers and memory",
      "arch": "x7M",
      "operands": "RR RRR"
    },
    "SXTAB": {
      "desc": "Sign extend BytE with Addition",
      "arch": "6 7EM",
      "operands": "RR RRC RRR RRRC"
    },
    "SXTAB16": {
      "desc": "Sign extend two Bytes, with Addition",
      "arch": "6 7EM",
      "operands": "RR RRC RRR RRRC"
    },
    "SXTAH": {
      "desc": "Sign extend Halfword, with Addition",
      "arch": "6 7EM",
      "operands": "RR RRC RRR RRRC"
    },
    "SXTB": {
      "desc": "Sign extend Byte",
      "arch": "6",
      "operands": "RR RC RRC"
    },
    "SXTB16": {
      "desc": "Sign extend two Bytes",
      "arch": "6 7EM",
      "operands": "RR RC RRC"
    },
    "SXTH": {
      "desc": "Sign extend Halfword",
      "arch": "6",
      "operands": "RR RC RRC"
    },
    "SYS": {
      "desc": "Execute system coprocessor instruction",
      "arch": "7A, 7R",
      "operands": "*"
    },
    "TBB": {
      "desc": "Table Branch Byte",
      "arch": "T2",
      "operands": "*",
      "docName": "tbb-and-tbh"
    },
    "TBH": {
      "desc": "Table Branch Halfword",
      "arch": "T2",
      "operands": "*",
      "docName": "tbb-and-tbh"
    },
    "TEQ": {
      "desc": "Test Equivalence",
      "arch": "x6M",
      "operands": "RO"
    },
    "TST": {
      "desc": "Test",
      "operands": "RO"
    },
    "UADD8": {
      "desc": "Unsigned parallel byte-wise addition",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "UADD16": {
      "desc": "Unsigned parallel hslfword-wise addition",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "UASX": {
      "desc": "Unsigned parallel add and subtract halfwords with exchange",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "UBFX": {
      "desc": "Unsigned Bit Field eXtract",
      "arch": "T2",
      "operands": "RRNN"
    },
    "UDIV": {
      "desc": "Unsigned divide",
      "arch": "7A, 7M 7R",
      "operands": "RR RRR"
    },
    "UHADD8": {
      "desc": "Unsigned halving parallel byte-wise addition",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "UHADD16": {
      "desc": "Unsigned halving parallel halfword-wise addition",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "UHASX": {
      "desc": "Unsigned halving parallel add and subtract halfwords with exchange",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "UHSAX": {
      "desc": "Unsigned halving parallel subtract and add halfwords with exchange",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "UHSUB8": {
      "desc": "Unsigned halving parallel byte-wise subtraction",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "UHSUB16": {
      "desc": "Unsigned halving parallel halfword-wise subtraction",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "UMAAL": {
      "desc": "Unsigned Multiply Accumulate Accumulate Long (64 <= 32 + 32 + 32 x 32)",
      "arch": "6 7EM",
      "operands": "RRRR"
    },
    "UMLAL": {
      "desc": "Unsigned Multiply Accumulate (64 <= 32 x 32 + 64), (64 <= 32 x 32)",
      "arch": "x6M",
      "operands": "RRRR",
      "suffix": "S"
    },
    "UMULL": {
      "desc": "Unsigned Multiply (64 <= 32 x 32 + 64), (64 <= 32 x 32)",
      "arch": "x6M",
      "operands": "RRRR",
      "suffix": "S"
    },
    "UND": {
      "desc": "Generate an architecturally undefined instruction.",
      "specifier": "W",
      "docName": "und-pseudo-instruction"
    },
    "UQUADD8": {
      "desc": "Unsigned saturating parallel byte-wise addition",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "UQUADD16": {
      "desc": "Unsigned saturating parallel halfword-wise addition",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "UQASX": {
      "desc": "Unsigned saturating parallel add and subtract halfwords with exchange",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "UQSAX": {
      "desc": "Unsigned saturating parallel subtract and add halfwords with exchange",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "UQSUB8": {
      "desc": "Unsigned saturating parallel byte-wise subtraction",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "UQSUB16": {
      "desc": "Unsigned saturating parallel halfword-wise subtraction",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "USAD8": {
      "desc": "Unsigned Sum of Absolute Differences",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "USADA8": {
      "desc": "Accumulate Unsigned Sum of Absolute Differences",
      "arch": "6 7EM",
      "operands": "RRRR"
    },
    "USAT": {
      "desc": "Unsigned Saturate",
      "arch": "6 x6M"
    },
    "USAT16": {
      "desc": "Unsigned SaturatE parallel halfwords",
      "arch": "6 7EM"
    },
    "USAX": {
      "desc": "Unsigned parallel subtract and add halfwords with exchange",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "USUB8": {
      "desc": "Unsigned parallel byte-wise subtraction",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "USUB16": {
      "desc": "Unsigned parallel halfword-wise subtraction",
      "arch": "6 7EM",
      "operands": "RR RRR"
    },
    "UXTAB": {
      "desc": "Zero extend Byte with Addition",
      "arch": "6 7EM",
      "operands": "RR RRC RRR RRRC"
    },
    "UXTAB16": {
      "desc": "Zero extend two bytes with Addition",
      "arch": "6 7EM",
      "operands": "RR RRC RRR RRRC"
    },
    "UXTAH": {
      "desc": "Zero extend Halfword with Addition",
      "arch": "6 7EM",
      "operands": "RR RRC RRR RRRC"
    },
    "UXTB": {
      "desc": "Zero extend Byte",
      "arch": "6",
      "operands": "RR RC RRC"
    },
    "UXTB16": {
      "desc": "Zero extend two bytes",
      "arch": "6 7EM",
      "operands": "RR RC RRC"
    },
    "UXTH": {
      "desc": "Zero extend Halfword",
      "arch": "6",
      "operands": "RR RC RRC"
    },
    "WFE": {
      "desc": "Wait For Event",
      "arch": "T2 6M",
      "operands": ""
    },
    "WFI": {
      "desc": "Wait For Interrupt",
      "arch": "T2 6M",
      "operands": ""
    },
    "YIELD": {
      "desc": "Yield",
      "arch": "T2 6M",
      "operands": ""
    }
  }
}