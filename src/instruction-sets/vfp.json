{
  "displayName": "Vector Floating-Point (VFP)",
  "feature": "VFP",
  "instructions": {
    "VABS": {
      "desc": "Floating-point absolute value.",
      "specifier": "F32 F64"
    },
    "VADD": {
      "desc": "Floating-point add.",
      "specifier": "F32 F64"
    },
    "VCMP": {
      "desc": "Floating-point compare.",
      "specifier": "F32 F64"
    },
    "VCMPE": {
      "desc": "Floating-point compare.",
      "specifier": "F32 F64"
    },
    "VCVT": {
      "desc": "Convert between single-precision and double-precision numbers.",
      "specifier": "F32.F64 F64.F32"
    },
    "VCVTR": {
      "desc": "Convert between floating-point numbers and integers with rounding.",
      "specifier": "F32 F64"
    },
    "VCVTB": {
      "desc": "Convert between half-precision and single-precision floating-point numbers.",
      "specifier": "F32.F16 F16.F32"
    },
    "VCVTT": {
      "desc": "Convert between half-precision and single-precision floating-point numbers.",
      "specifier": "F32.F16 F16.F32"
    },
    "VDIV": {
      "desc": "Floating-point divide.",
      "specifier": "F32 F64"
    },
    "VFMA": {
      "desc": "Fused floating-point multiply accumulate.",
      "specifier": "F32 F64"
    },
    "VFMS": {
      "desc": "Fused floating-point multiply subtract.",
      "specifier": "F32 F64"
    },
    "VFNMA": {
      "desc": "Fused floating-point multiply accumulate with negation.",
      "specifier": "F32 F64"
    },
    "VFNMS": {
      "desc": "Fused floating-point multiply subtract with negation.",
      "specifier": "F32 F64"
    },
    "VLDM": {
      "desc": "Extension register load multiple."
    },
    "VLDMIA": {
      "desc": "Extension register load multiple. Same as VLDM."
    },
    "VLDMDB": {
      "desc": "Extension register load multiple. Decrement address Before each transfer."
    },
    "VLDMEA": {
      "desc": "Extension register load multiple. Empty Ascending stack operation. Same as DB for loads."
    },
    "VLDMFD": {
      "desc": "Extension register load multiple. Full Descending stack operation. Same as IA for loads"
    },
    "VLDR": {
      "desc": "Extension register load.",
      "specifier": "32 64 F32 F64"
    },
    "VMLA": {
      "desc": "Floating-point multiply accumulate.",
      "specifier": "F32 F64"
    },
    "VMLS": {
      "desc": "Floating-point multiply subtract.",
      "specifier": "F32 F64"
    },
    "VMOV": {
      "desc": "Insert a floating-point immediate value into a single-precision or double-precision register, or copy one register into another register. This instruction is always scalar.",
      "specifier": "F32 F64 32 <none>"
    },
    "VMRS": {
      "desc": "Transfer the contents of a VFP system register to an ARM register."
    },
    "VMSR": {
      "desc": "Transfer the contents of an ARM register to a VFP system register."
    },
    "VMUL": {
      "desc": "Floating-point multiply.",
      "specifier": "F32 F64"
    },
    "VNEG": {
      "desc": "Floating-point negate.",
      "specifier": "F32 F64"
    },
    "VNMLA": {
      "desc": "Floating-point multiply accumulate with negation.",
      "specifier": "F32 F64"
    },
    "VNMLS": {
      "desc": "Floating-point multiply subtract with negation.",
      "specifier": "F32 F64"
    },
    "VNMUL": {
      "desc": "Floating-point multiply with negation.",
      "specifier": "F32 F64"
    },
    "VPOP": {
      "desc": "Pop extension registers from the stack."
    },
    "VPUSH": {
      "desc": "Push extension registers onto the stack."
    },
    "VSQRT": {
      "desc": "Floating-point square root.",
      "specifier": "F32 F64"
    },
    "VSTM": {
      "desc": "Extension register store multiple."
    },
    "VSTMIA": {
      "desc": "Extension register store multiple. Same as VLDM."
    },
    "VSTMDB": {
      "desc": "Extension register store multiple. Decrement address Before each transfer."
    },
    "VSTMEA": {
      "desc": "Extension register store multiple. Empty Ascending stack operation. Same as IA for stores."
    },
    "VSTMFD": {
      "desc": "Extension register store multiple. Full Descending stack operation. Same as DB for stores."
    },
    "VSTR": {
      "desc": "Extension register store.",
      "specifier": "32 64"
    },
    "VSUB": {
      "desc": "Floating-point subtract.",
      "specifier": "F32 F64"
    }
  }
}